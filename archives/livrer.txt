##
##   livrer
##
##   étape de livraison du bundle via proven
##

## Environnement pipeline
+ env.provenUser : pré-requis de la librairie utility-dsl
+ env.provenPassword : pré-requis de la librairie utility-dsl

## Tools
+ jdk
+ maven

## Paramètre de la closure
+ bundles = "tableau de bundles a livrer"
+ matrice = "GAV de la matrice à livrer"
+ livraisonAuto = [FACULTATIF] 'false' (valeur par defaut) ajoute une demande de validation avant de lancer la livraison, 'true': la livraison est lancée directement"
+ inputTimeout = "Timeout sur la fonction livrer"
+ submitters = [FACULTATIF] "liste de nom d'utilisateur autorisé pour valider l'etape, séparé par des virgules et sans espaces entre eux,  si null tout le monde peux valider l'étape"
+ node = [FACULTATIF] noeud jenkins, par defaut on utilise le JenkinsNodes.DEFAULT.label
+ notifications = [peut être un tableau vide] 

## Remarques 
la livraison ne doit pas être incluse dans un bloc node sinon elle block un executeur

## Exemples

- exemple simple, livraison en automatique
``` 
    livrer {
        bundles = [releaseBundle]
        matrice = configuration.environnements[cadre].matrix
        livraisonAuto = true
        notifications = [livraisonNotif]
    }
``` 
- exemple avec l'ensemble des paramètres
``` 
    livrer{
        bundles             = [bundle1, bundle2]
        matrice             = "groupId:artifactId:version"
        livraisonAuto       = false
        submitters           = 'iegu8390,iqrliv,eggo1060'
        node                = JenkinsNodes.MAVEN.label
    }
``` 

Exemple d'instance de notification par défaut :
```
import com.capgemini.fs.jenkins.plugins.notification.*
import com.capgemini.fs.jenkins.plugins.notification.html.*

    Notification livraisonNotif = LivraisonHtml.to(configuration.contacts.EQUIPE, recipientsCc)
    livraisonNotif.appendData(NotificationDataKeys.PROJECT_NAME.key, "Mon projet")
    livraisonNotif.appendData(NotificationDataKeys.CADRE.key, "VA")
    livraisonNotif.appendData(NotificationDataKeys.MATRICE.key, "groupId:artifactId:version")
```